# ============================ 
# Task 1:
# Дан массив чисел, состоящий из некоторого количества подряд идущих единиц, за которыми следует какое-то количество подряд идущих нулей: 111111111111111111111111100000000. 
# Найти индекс первого нуля (то есть найти такое место, где заканчиваются единицы, и начинаются нули)
# Какова сложность вашего алгоритма?

def task1(array):
	return str(array).find('0') 

# ============================ 
# Task 2:
# В нашей школе мы не можем разглашать персональные данные пользователей, но чтобы преподаватель и ученик смогли объяснить нашей поддержке, кого они имеют в виду 
# (у преподавателей, например, часто учится несколько Саш), мы генерируем пользователям уникальные и легко произносимые имена. 
# Имя у нас состоит из прилагательного, имени животного и двузначной цифры. В итоге получается, например, "Перламутровый лосось 77". Для генерации таких имен мы и решали следующую задачу:
# Получить с русской википедии список всех животных (Категория:Животные по алфавиту) и вывести количество животных на каждую букву алфавита. Результат должен получиться в следующем виде:
#  А: 642
# Б: 412
# В:....

import wikipediaapi
# стандартная библиотека с pip wikipedia-api

def get_animals_count():
	result = {}

	# запрос данных с вики
	wiki_wiki = wikipediaapi.Wikipedia('ru')
	page_py = wiki_wiki.page('Категория:Животные по алфавиту')
	cat = page_py.categorymembers

	# обход категорий
	for key in cat:
		first_letter = key[0]	
		count = result.get(first_letter, 0)
		result[first_letter] = count + 1

	return result
  
# ============================ 
# Task 3:
# Мы сохраняем время присутствия каждого пользователя на уроке  виде интервалов. В функцию передается словарь, содержащий три списка с таймстемпами (время в секундах): — lesson – начало и конец урока 
# — pupil – интервалы присутствия ученика 
# — tutor – интервалы присутствия учителя 
# Интервалы устроены следующим образом – это всегда список из четного количества элементов. Под четными индексами (начиная с 0) время входа на урок, под нечетными - время выхода с урока.
# Нужно написать функцию, которая получает на вход словарь с интервалами и возвращает время общего присутствия ученика и учителя на уроке (в секундах). 
# Будет плюсом: Написать WEB API с единственным endpoint’ом для вызова этой функции.

def appearance(intervals):
	result = 0
	lesson_list = intervals['lesson']
	pupil_list = intervals['pupil']
	len_pupil = len(pupil_list)
	tutor_list = intervals['tutor']
	len_tutor = len(tutor_list)

	if not len(lesson_list) or not len_pupil or not len_tutor:
		# нет пересечений
		return 0

	start_lesson = lesson_list[0]
	end_lesson = lesson_list[1]

	# ищем пересечения
	# из тестов сделан вывод, что преподаватель один, а студентов может быть несколько, поэтому 
	# будет два вложенных цикла с наложением отрезков
	for i in range(0, len_tutor, 2):
		start_tutor = max(tutor_list[i], start_lesson) 
		end_tutor = min(tutor_list[i+1], end_lesson)
		tek_time = start_tutor

		for j in range(0, len_pupil, 2):
			start_pupil = max(tek_time, pupil_list[j])
			if start_pupil<end_tutor:
				end_pupil = min(pupil_list[j+1], end_tutor)
				if start_pupil<end_pupil:
					delta = end_pupil - start_pupil
					result += delta
					tek_time = end_pupil

	return result



